version: '3.9'

services:

#  redis:
#    container_name: redis
#    image: redis:5
#    ports:
#      - ${REDIS_PORT}:${REDIS_PORT}

#  postgres:
#    container_name: postgres
#    image: postgres:14.0-alpine
#    env_file:
#      - .env
#    volumes:
#      - ./data:/var/lib/postgresql/data
#    environment:
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_DB=${POSTGRES_DB}
#    ports:
#      - ${POSTGRES_PORT}:${POSTGRES_PORT}
#    restart: always

#  redis-commander:
#    container_name: redis-commander
#    hostname: redis-commander
#    image: rediscommander/redis-commander:latest
#    restart: always
#    environment:
#      - REDIS_HOSTS=local:redis:6379
#    ports:
#      - "8082:8081"

#  postgres_test:
#    container_name: postgres_test
#    image: postgres:14.0-alpine
#    env_file:
#      - .env
#    environment:
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_DB=${POSTGRES_DB}
#    ports:
#      - ${POSTGRES_PORT_TEST}:${POSTGRES_PORT}
#    restart: always
#
#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmin4_container
#    restart: always
#    ports:
#      - "5050:80"
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: admin

  maia-collect-data-app:
    container_name: maia-collect-data-app
    build: .
    volumes:
      - .:/app
    env_file:
      - .env
    command: python app/main.py
    ports:
      - 8001:8001
    restart: unless-stopped
